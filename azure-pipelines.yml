# Trigger the pipeline when changes are pushed to the 'main' branch
trigger:
- main

# Define pipeline variables
variables:
  buildConfiguration: 'Release'

# Define the stages in the pipeline
stages:
- stage: Build
  displayName: "Build the Application"
  jobs:
  - job: BuildJob
    displayName: "Build Job"
    pool:
      vmImage: 'ubuntu-latest' # Choose the build agent
    steps:
    # Check out the code from the repository
    - task: Checkout@1
      displayName: "Checkout Code"
      inputs:
        clean: true

    # Install dependencies (e.g., Node.js, Python, or .NET dependencies)
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
    - script: |
        pip install -r requirements.txt
      displayName: "Install Dependencies"

    # Build or compile the application
    - script: |
        echo "Building application..."
        # Insert build commands here (e.g., python setup.py build)
      displayName: "Build Application"

    # Publish the build artifacts for deployment
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: drop
        publishLocation: Container

- stage: Deploy
  displayName: "Deploy to Azure"
  dependsOn: Build
  jobs:
  - job: DeployToResourceGroup1
    displayName: "Deploy to Azure Resource Group 1"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    # Deploy resources using Azure CLI
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'ServiceConnectionOrg1' # Replace with your service connection name
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Deploying to Resource Group 1..."
          az group deployment create \
            --resource-group myResourceGroup1 \
            --template-file mainTemplate.json \
            --parameters @parameters1.json

  - job: DeployToResourceGroup2
    displayName: "Deploy to Azure Resource Group 2"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    # Deploy resources using Azure CLI
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'ServiceConnectionOrg2' # Replace with your service connection name
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Deploying to Resource Group 2..."
          az group deployment create \
            --resource-group myResourceGroup2 \
            --template-file mainTemplate.json \
            --parameters @parameters2.json
